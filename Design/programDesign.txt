“Doodle” aims to solve the problem of providing a simplified drawing app for someone not interested in creating a work of art, but rather, “doodling” in their spare time while still coming up with something interesting to show for it. Because of this, “Doodle” was engineered to be simple, with a few optional features that allow the user to get more complex if they so choose. “Doodle” provides default color options and can interface with the user’s mouse or trackpad. The user can draw simply by dragging. However, should they choose to use a tablet, or choose to input a custom RGB value or line thickness, they can. “Doodle”’s complexity is exactly what the user wants it to be. This is why “Doodle” utilizes Tkinter as its graphics library. Fancy graphics libraries like PyGame aren’t necessary for something designed to be simple.

The actually code structure of “Doodle” largely utilizes OOP. The vast majority of marks the user makes on the canvas are objects stored in lists and redrawn on the screen. Each line in draw mode is an object, each rotation in rotate mode, each shape in shape mode, and each stamp in stamp mode. This utilization of OOP allowed me to write somewhat concise code through objects and sub-objects. The actual structure of the different modes are fairly similar to each other. The basic premise of any sort of mode where the user draws is that the mark is made, displayed, and recorded in a list based on user inputs. The difference between modes is how those inputs are displayed and modified.